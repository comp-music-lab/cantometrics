rater_1 <- as.dist(rater_1)
rater_1
fit <- cmdscale(rater_1,k=2, eig=TRUE, add=FALSE,x.ret =FALSE)
x <- fit$points[,1]
y <- fit$points[,2]
plot(x,y,pch=19,col='#1ABCBD')
text(x,y, pos=1, labels=song.names, offset=0.5)
title(main = 'Individual Similarity Rating', sub = 'Rater 1', xlab = NULL, ylab = NULL,line = NA, outer = FALSE)
fit$GOF
rater_1<- 100-rater_1
fit <- cmdscale(rater_1,k=2, eig=TRUE, add=FALSE,x.ret =FALSE)
x <- fit$points[,1]
y <- fit$points[,2]
plot(x,y,pch=19,col='#1ABCBD')
text(x,y, pos=1, labels=song.names, offset=0.5)
title(main = 'Individual Similarity Rating', sub = 'Rater 1', xlab = NULL, ylab = NULL,line = NA, outer = FALSE)
fit$GOF
rater_2 <- as.dist(rater_2)
rater_2<- 100-rater_2
fit <- cmdscale(rater_1,k=2, eig=TRUE, add=FALSE,x.ret =FALSE)
x <- fit$points[,1]
y <- fit$points[,2]
plot(x,y,pch=19,col='#1ABCBD')
text(x,y, pos=1, labels=song.names, offset=0.5)
title(main = 'Individual Similarity Rating', sub = 'Rater 1', xlab = NULL, ylab = NULL,line = NA, outer = FALSE)
fit$GOF
fit <- cmdscale(rater_2,k=2, eig=TRUE, add=FALSE,x.ret =FALSE)
x <- fit$points[,1]
y <- fit$points[,2]
plot(x,y,pch=19,col='#1ABCBD')
text(x,y, pos=1, labels=song.names, offset=0.5)
title(main = 'Individual Similarity Rating', sub = 'Rater 2', xlab = NULL, ylab = NULL,line = NA, outer = FALSE)
fit$GOF
rater_3 <- as.dist(rater_3)
rater_3
rater_3 <- 100-rater_3
fit <- cmdscale(rater_3,k=2, eig=TRUE, add=FALSE,x.ret =FALSE)
x <- fit$points[,1]
y <- fit$points[,2]
plot(x,y,pch=19,col='#1ABCBD')
text(x,y, pos=1, labels=song.names, offset=0.5)
title(main = 'Individual Similarity Rating', sub = 'Rater 3', xlab = NULL, ylab = NULL,line = NA, outer = FALSE)
fit$GOF
mantel(rater_1,rater_2,permutations=10000,method="spearman")
plot(rater_1,rater_2, xlab='Rater 1', ylab='Rater 2', pch=19, col='#1ABCBD')
abline(lm(rater_1~rater_2), col="red")
title(main='Inter Rater Correlation')
mantel(rater_1,rater_3,permutations=10000,method="spearman")
plot(rater_1,rater_4, xlab='Rater 1', ylab='Rater 3', pch=19, col='#1ABCBD')
abline(lm(rater_1~rater_3), col="red")
title(main='Inter Rater Correlation'
)
mantel(rater_1,rater_3,permutations=10000,method="spearman")
plot(rater_1,rater_3, xlab='Rater 1', ylab='Rater 3', pch=19, col='#1ABCBD')
abline(lm(rater_1~rater_3), col="red")
title(main='Inter Rater Correlation')
mantel(rater_2,rater_3,permutations=10000,method="spearman")
plot(rater_2,rater_3, xlab='Rater 2', ylab='Rater 3', pch=19, col='#1ABCBD')
abline(lm(rater_2~rater_3), col="red")
title(main='Inter Rater Correlation')
average <- (rater_1+rater_2+rater_3)/3
fit <- cmdscale(average,k=2, eig=TRUE, add=FALSE,x.ret =FALSE)
x <- fit$points[,1]
y <- fit$points[,2]
plot(x,y,pch=19,col='#1ABCBD')
text(x,y, pos=1, labels=song.names, offset=0.5)
title(main = 'Average Similarity Rating', sub = 'All Raters', xlab = NULL, ylab = NULL,line = NA, outer = FALSE)
fit$GOF
mantel(rater_1,average,permutations=10000,method="spearman")
plot(rater_1,average, xlab='Rater 1', ylab='Average', pch=19, col='#1ABCBD')
abline(lm(rater_1~average), col="red")
title(main='Inter Rater Correlation')
mantel(rater_2,average,permutations=10000,method="spearman")
plot(rater_2,average, xlab='Rater 2', ylab='Average', pch=19, col='#1ABCBD')
abline(lm(rater_2~average), col="red")
title(main='Inter Rater Correlation')
mantel(rater_3,average,permutations=10000,method="spearman")
plot(rater_3,average, xlab='Rater 3', ylab='Average', pch=19, col='#1ABCBD')
abline(lm(rater_3~average), col="red")
title(main='Inter Rater Correlation')
rater_1 <- read.csv('/Users/hideodaikoku/Documents/Comp Music/ISMIR Draft/newdata/similarity/Pat_SongComparison_0426.csv', header=FALSE)
rater_2 <- read.csv('/Users/hideodaikoku/Documents/Comp Music/ISMIR Draft/newdata/similarity/delton.csv', header=FALSE)
rater_3 <- read.csv('/Users/hideodaikoku/Documents/Comp Music/ISMIR Draft/newdata/similarity/hideo_SongComparison_0423.csv', header=FALSE)
rater_1 <- as.dist(rater_1)
rater_2 <- as.dist(rater_2)
rater_3 <- as.dist(rater_3)
rater_1 <- 100-rater_1
rater_2 <- 100-rater_2
rater_3 <- 100-rater_3
song.names<-c('African','Javanese','Korean','Gagaku','Djanba','Samba','Horo','Concerto','Alap','Timbre')
average <- (rater_1+rater_2+rater_3)/3
fit <- cmdscale(rater_1,k=2, eig=TRUE, add=FALSE,x.ret =FALSE)
x <- fit$points[,1]
y <- fit$points[,2]
plot(x,y,pch=19,col='#1ABCBD')
text(x,y, pos=1, labels=song.names, offset=0.5)
title(main = 'Individual Similarity Rating', sub = 'Rater 1', xlab = NULL, ylab = NULL,line = NA, outer = FALSE)
fit$GOF
fit <- cmdscale(rater_2,k=2, eig=TRUE, add=FALSE,x.ret =FALSE)
x <- fit$points[,1]
y <- fit$points[,2]
plot(x,y,pch=19,col='#1ABCBD')
text(x,y, pos=1, labels=song.names, offset=0.5)
title(main = 'Individual Similarity Rating', sub = 'Rater 2', xlab = NULL, ylab = NULL,line = NA, outer = FALSE)
fit$GOF
fit <- cmdscale(rater_3,k=2, eig=TRUE, add=FALSE,x.ret =FALSE)
x <- fit$points[,1]
y <- fit$points[,2]
plot(x,y,pch=19,col='#1ABCBD')
text(x,y, pos=1, labels=song.names, offset=0.5)
title(main = 'Individual Similarity Rating', sub = 'Rater 3', xlab = NULL, ylab = NULL,line = NA, outer = FALSE)
fit$GOF
fit <- cmdscale(average,k=2, eig=TRUE, add=FALSE,x.ret =FALSE)
x <- fit$points[,1]
y <- fit$points[,2]
plot(x,y,pch=19,col='#1ABCBD')
text(x,y, pos=1, labels=song.names, offset=0.5)
title(main = 'Average Similarity Rating', sub = 'All Raters', xlab = NULL, ylab = NULL,line = NA, outer = FALSE)
fit$GOF
mantel(rater_1,rater_2,permutations=10000,method="spearman")
plot(rater_1,rater_2, xlab='Rater 1', ylab='Rater 2', pch=19, col='#1ABCBD')
abline(lm(rater_1~rater_2), col="red")
title(main='Inter Rater Correlation')
library('vegan')
mantel(rater_1,rater_2,permutations=10000,method="spearman")
plot(rater_1,rater_2, xlab='Rater 1', ylab='Rater 2', pch=19, col='#1ABCBD')
abline(lm(rater_1~rater_2), col="red")
title(main='Inter Rater Correlation')
mantel(rater_1,rater_3,permutations=10000,method="spearman")
plot(rater_1,rater_3, xlab='Rater 1', ylab='Rater 3', pch=19, col='#1ABCBD')
abline(lm(rater_1~rater_3), col="red")
title(main='Inter Rater Correlation')
mantel(rater_2,rater_3,permutations=10000,method="spearman")
plot(rater_2,rater_3, xlab='Rater 2', ylab='Rater 3', pch=19, col='#1ABCBD')
abline(lm(rater_2~rater_3), col="red")
title(main='Inter Rater Correlation')
fit <- cmdscale(average,k=2, eig=TRUE, add=FALSE,x.ret =FALSE)
x <- fit$points[,1]
y <- fit$points[,2]
plot(x,y,pch=19,col='#1ABCBD')
text(x,y, pos=1, labels=song.names, offset=0.5)
title(main = 'Individual Similarity Rating', sub = 'Rater 1', xlab = NULL, ylab = NULL,line = NA, outer = FALSE)
fit$GOF
musly <- read.csv('/Users/hideodaikoku/Documents/Comp Music/cross-cultural-aesthetics/output/musly.csv',sep=",", header=FALSE)
pohle <- read.csv('/Users/hideodaikoku/Documents/Comp Music/cross-cultural-aesthetics/output/pohle.csv',sep=",", header=FALSE)
panteli <- read.csv('/Users/hideodaikoku/Documents/Comp Music/cross-cultural-aesthetics/output/result.csv',sep=",", header=FALSE)
musly <- data.frame(lapply(musly, function(x) scale(x, center = FALSE, scale = max(x, na.rm = TRUE)/1)))
musly
musly <- musly*100
musly
pohle <- data.frame(lapply(pohle, function(x) scale(x, center = FALSE, scale = max(x, na.rm = TRUE)/1)))
panteli <- data.frame(lapply(panteli, function(x) scale(x, center = FALSE, scale = max(x, na.rm = TRUE)/1)))
pohle <- pohle*100
panteli <- panteli*100
pohle
musly <- as.dist(musly)
pohle <- as.dist(pohle)
panteli <- as.dist(panteli)
average_algorithmic <- (pohle + musly+ panteli)/3
average_algorithmic
mantel(rater_1,musly,permutations=10000,method="spearman")
plot(rater_1,musly, xlab='Rater 1', ylab='Musly', pch=19, col='#1ABCBD')
abline(lm(rater_1~musly), col="red")
title(main='Inter Rater Correlation')
musly <- read.csv('/Users/hideodaikoku/Documents/Comp Music/ISMIR Draft/newdata/similarity/musly.csv',sep=",", header=FALSE)
pohle <- read.csv('/Users/hideodaikoku/Documents/Comp Music/ISMIR Draft/newdata/similarity/pohle.csv',sep=",", header=FALSE)
pohle <- read.csv('/Users/hideodaikoku/Documents/Comp Music/ISMIR Draft/newdata/similarity/panteli.csv',sep=",", header=FALSE)
musly <- data.frame(lapply(musly, function(x) scale(x, center = FALSE, scale = max(x, na.rm = TRUE)/1)))
pohle <- data.frame(lapply(pohle, function(x) scale(x, center = FALSE, scale = max(x, na.rm = TRUE)/1)))
panteli <- data.frame(lapply(panteli, function(x) scale(x, center = FALSE, scale = max(x, na.rm = TRUE)/1)))
panteli <- panteli*100
pohle <- pohle*100
musly <- musly*100
musly <- as.dist(musly)
pohle <- as.dist(pohle)
panteli <- as.dist(panteli)
panteli
musly <- read.csv('/Users/hideodaikoku/Documents/Comp Music/ISMIR Draft/newdata/similarity/musly.csv',sep=",", header=FALSE)
musly
musly <- musly*100
musly <- as.dist(musly)
panteli <- read.csv('/Users/hideodaikoku/Documents/Comp Music/cross-cultural-aesthetics/output/result.csv',sep=",", header=FALSE)
panteli
panteli <- read.csv('/Users/hideodaikoku/Documents/Comp Music/ISMIR Draft/newdata/similarity/result.csv',sep=",", header=FALSE)
panteli <- read.csv('/Users/hideodaikoku/Documents/Comp Music/ISMIR Draft/newdata/similarity/panteli.csv',sep=",", header=FALSE)
musly <- as.dist(musly)
pohle <- as.dist(pohle)
panteli <- as.dist(panteli)
panteli
panteli <- read.csv('/Users/hideodaikoku/Documents/Comp Music/ISMIR Draft/newdata/similarity/panteli.csv',sep=",", header=FALSE)
panteli <- panteli*100
musly <- as.dist(musly)
pohle <- as.dist(pohle)
panteli <- as.dist(panteli)
panteli
pohle
musly
panteli <- read.csv('/Users/hideodaikoku/Documents/Comp Music/ISMIR Draft/newdata/similarity/panteli.csv',sep=",", header=FALSE)
pohle <- read.csv('/Users/hideodaikoku/Documents/Comp Music/ISMIR Draft/newdata/similarity/panteli.csv',sep=",", header=FALSE)
musly <- read.csv('/Users/hideodaikoku/Documents/Comp Music/ISMIR Draft/newdata/similarity/musly.csv',sep=",", header=FALSE)
pohle <- data.frame(lapply(pohle, function(x) scale(x, center = FALSE, scale = max(x, na.rm = TRUE)/1)))
panteli <- data.frame(lapply(panteli, function(x) scale(x, center = FALSE, scale = max(x, na.rm = TRUE)/1)))
musly <- data.frame(lapply(musly, function(x) scale(x, center = FALSE, scale = max(x, na.rm = TRUE)/1)))
panteli <- panteli*100
musly <- musly*100
pohle <- pohle*100
musly <- as.dist(musly)
pohle <- as.dist(pohle)
panteli <- as.dist(panteli)
musly
pohle
panteli
pohle <- read.csv('/Users/hideodaikoku/Documents/Comp Music/ISMIR Draft/newdata/similarity/panteli.csv',sep=",", header=FALSE)
pohle <- read.csv('/Users/hideodaikoku/Documents/Comp Music/ISMIR Draft/newdata/similarity/pohle.csv',sep=",", header=FALSE)
pohle <- pohle*100
pohle <- as.dist(pohle)
pohle
pohle <- read.csv('/Users/hideodaikoku/Documents/Comp Music/ISMIR Draft/newdata/similarity/pohle.csv',sep=",", header=FALSE)
pohle
panteli <- read.csv('/Users/hideodaikoku/Documents/Comp Music/ISMIR Draft/newdata/similarity/panteli.csv',sep=",", header=FALSE)
pohle <- read.csv('/Users/hideodaikoku/Documents/Comp Music/ISMIR Draft/newdata/similarity/pohle.csv',sep=",", header=FALSE)
musly <- read.csv('/Users/hideodaikoku/Documents/Comp Music/ISMIR Draft/newdata/similarity/musly.csv',sep=",", header=FALSE)
pohle <- data.frame(lapply(pohle, function(x) scale(x, center = FALSE, scale = max(x, na.rm = TRUE)/1)))
panteli <- data.frame(lapply(panteli, function(x) scale(x, center = FALSE, scale = max(x, na.rm = TRUE)/1)))
musly <- data.frame(lapply(musly, function(x) scale(x, center = FALSE, scale = max(x, na.rm = TRUE)/1)))
panteli <- panteli*100
musly <- musly*100
pohle <- pohle*100
musly <- as.dist(musly)
pohle <- as.dist(pohle)
panteli <- as.dist(panteli)
average <- (musly+pohle+panteli)/3
musly
pohle
panteli
mantel(rater_1,musly,permutations=10000,method="spearman")
plot(rater_1,musly, xlab='Rater 1', ylab='Musly', pch=19, col='#1ABCBD')
abline(lm(rater_1~musly), col="red")
title(main='Rater Algorithm Correlation')
mantel(rater_2,musly,permutations=10000,method="spearman")
plot(rater_2,musly, xlab='Rater 2', ylab='Musly', pch=19, col='#1ABCBD')
abline(lm(rater_2~musly), col="red")
title(main='Rater Algorithm Correlation')
mantel(rater_3,musly,permutations=10000,method="spearman")
plot(rater_3,musly, xlab='Rater 3', ylab='Musly', pch=19, col='#1ABCBD')
abline(lm(rater_3~musly), col="red")
title(main='Rater Algorithm Correlation')
mantel(rater_2,musly,permutations=10000,method="spearman")
plot(rater_2,musly, xlab='Rater 2', ylab='Musly', pch=19, col='#1ABCBD')
abline(lm(rater_2~musly), col="red")
title(main='Rater Algorithm Correlation')
mantel(rater_3,musly,permutations=10000,method="spearman")
plot(rater_3,musly, xlab='Rater 3', ylab='Musly', pch=19, col='#1ABCBD')
abline(lm(rater_3~musly), col="red")
title(main='Rater Algorithm Correlation')
mantel(rater_1,pohle,permutations=10000,method="spearman")
plot(rater_1,pohle, xlab='Rater 1', ylab='Pohle', pch=19, col='#1ABCBD')
abline(lm(rater_1~pohle), col="red")
title(main='Rater Algorithm Correlation')
mantel(rater_2,pohle,permutations=10000,method="spearman")
plot(rater_2,pohle, xlab='Rater 2', ylab='Pohle', pch=19, col='#1ABCBD')
abline(lm(rater_2~pohle), col="red")
title(main='Rater Algorithm Correlation')
mantel(rater_3,pohle,permutations=10000,method="spearman")
plot(rater_3,pohle, xlab='Rater 3', ylab='Pohle', pch=19, col='#1ABCBD')
abline(lm(rater_3~pohle), col="red")
title(main='Rater Algorithm Correlation')
mantel(rater_1,panteli,permutations=10000,method="spearman")
plot(rater_1,panteli, xlab='Rater 1', ylab='Panteli', pch=19, col='#1ABCBD')
abline(lm(rater_1~panteli), col="red")
title(main='Rater Algorithm Correlation')
mantel(rater_3,pohle,permutations=10000,method="spearman")
plot(rater_3,pohle, xlab='Rater 3', ylab='Pohle', pch=19, col='#1ABCBD')
abline(lm(rater_3~pohle), col="red")
title(main='Rater Algorithm Correlation')
mantel(rater_2,panteli,permutations=10000,method="spearman")
plot(rater_2,panteli, xlab='Rater 2', ylab='Panteli', pch=19, col='#1ABCBD')
abline(lm(rater_2~panteli), col="red")
title(main='Rater Algorithm Correlation')
mantel(rater_3,panteli,permutations=10000,method="spearman")
plot(rater_3,panteli, xlab='Rater 3', ylab='Panteli', pch=19, col='#1ABCBD')
abline(lm(rater_3~panteli), col="red")
title(main='Rater Algorithm Correlation')
mantel(rater_1,average_algorithmic,permutations=10000,method="spearman")
plot(rater_1,average_algorithmic, xlab='Rater 1', ylab='Algorithm Average', pch=19, col='#1ABCBD')
abline(lm(rater_1~average_algorithmic), col="red")
title(main='Rater Algorithm Correlation')
average_algorithmic<-(panteli+pohle+musly)/3
average_algorithmic
mantel(rater_1,average_algorithmic,permutations=10000,method="spearman")
plot(rater_1,average_algorithmic, xlab='Rater 1', ylab='Algorithm Average', pch=19, col='#1ABCBD')
abline(lm(rater_1~average_algorithmic), col="red")
title(main='Rater Algorithm Correlation')
mantel(rater_2,average_algorithmic,permutations=10000,method="spearman")
plot(rater_2,average_algorithmic, xlab='Rater 2', ylab='Algorithm Average', pch=19, col='#1ABCBD')
abline(lm(rater_2~average_algorithmic), col="red")
title(main='Rater Algorithm Correlation')
mantel(rater_1,average_algorithmic,permutations=10000,method="spearman")
plot(rater_1,average_algorithmic, xlab='Rater 1', ylab='Algorithm Average', pch=19, col='#1ABCBD')
abline(lm(rater_1~average_algorithmic), col="red")
title(main='Rater Algorithm Correlation')
mantel(rater_3,average_algorithmic,permutations=10000,method="spearman")
plot(rater_3,average_algorithmic, xlab='Rater 3', ylab='Algorithm Average', pch=19, col='#1ABCBD')
abline(lm(rater_3~average_algorithmic), col="red")
title(main='Rater Algorithm Correlation')
mantel(average,average_algorithmic,permutations=10000,method="spearman")
plot(average,average_algorithmic, xlab='Rater Average', ylab='Algorithm Average', pch=19, col='#1ABCBD')
abline(lm(agerage~average_algorithmic), col="red")
title(main='Rater Algorithm Correlation')
mantel(average,average_algorithmic,permutations=10000,method="spearman")
plot(average,average_algorithmic, xlab='Rater Average', ylab='Algorithm Average', pch=19, col='#1ABCBD')
abline(lm(average~average_algorithmic), col="red")
title(main='Rater Algorithm Correlation')
average <- (rater_1+rater_2+rater_3)/3
mantel(average,average_algorithmic,permutations=10000,method="spearman")
plot(average,average_algorithmic, xlab='Rater Average', ylab='Algorithm Average', pch=19, col='#1ABCBD')
abline(lm(average~average_algorithmic), col="red")
title(main='Rater Algorithm Correlation')
mantel(musly,average,permutations=10000,method="spearman")
plot(musly,average, xlab='Musly', ylab='Rater Average', pch=19, col='#1ABCBD')
abline(lm(musly~average), col="red")
title(main='Rater Algorithm Correlation')
musly
mantel(pohle,average,permutations=10000,method="spearman")
plot(pohle,average, xlab='Pohle', ylab='Rater Average', pch=19, col='#1ABCBD')
abline(lm(pohle~average), col="red")
title(main='Rater Algorithm Correlation')
mantel(musly,average,permutations=10000,method="spearman")
plot(musly,average, xlab='Musly', ylab='Rater Average', pch=19, col='#1ABCBD')
abline(lm(musly~average), col="red")
title(main='Rater Algorithm Correlation')
mantel(panteli,average,permutations=10000,method="spearman")
plot(panteli,average, xlab='Panteli', ylab='Rater Average', pch=19, col='#1ABCBD')
abline(lm(panteli~average), col="red")
title(main='Rater Algorithm Correlation')
mantel(pohle,average_algorithmic,permutations=10000,method="spearman")
plot(pohle,average_algorithmic, xlab='Pohle', ylab='Average Algorithm', pch=19, col='#1ABCBD')
abline(lm(pohle~average_algorithmic), col="red")
title(main='Rater Algorithm Correlation')
mantel(musly,average_algorithmic,permutations=10000,method="spearman")
plot(musly,average_algorithmic, xlab='Musly', ylab='Average Algorithm', pch=19, col='#1ABCBD')
abline(lm(musly~average_algorithmic), col="red")
title(main='Rater Algorithm Correlation')
mantel(panteli,average_algorithmic,permutations=10000,method="spearman")
plot(panteli,average_algorithmic, xlab='Panteli', ylab='Average Algorithm', pch=19, col='#1ABCBD')
abline(lm(panteli~average_algorithmic), col="red")
title(main='Rater Algorithm Correlation')
mantel(pohle,average_algorithmic,permutations=10000,method="spearman")
plot(pohle,average_algorithmic, xlab='Pohle', ylab='Average Algorithm', pch=19, col='#1ABCBD')
abline(lm(pohle~average_algorithmic), col="red")
title(main='Rater Algorithm Correlation')
mantel(musly,average_algorithmic,permutations=10000,method="spearman")
plot(musly,average_algorithmic, xlab='Musly', ylab='Average Algorithm', pch=19, col='#1ABCBD')
abline(lm(musly~average_algorithmic), col="red")
title(main='Rater Algorithm Correlation')
mantel(panteli,average_algorithmic,permutations=10000,method="spearman")
plot(panteli,average_algorithmic, xlab='Panteli', ylab='Average Algorithm', pch=19, col='#1ABCBD')
abline(lm(panteli~average_algorithmic), col="red")
title(main='Rater Algorithm Correlation')
mantel(panteli,musly,permutations=10000,method="spearman")
plot(panteli,musly, xlab='Panteli', ylab='Musly', pch=19, col='#1ABCBD')
abline(lm(panteli~musly), col="red")
title(main='Inter Algorithm Correlation')
mantel(panteli,pohle,permutations=10000,method="spearman")
plot(panteli,pohle, xlab='Panteli', ylab='Pohle', pch=19, col='#1ABCBD')
abline(lm(panteli~pohle), col="red")
title(main='Inter Algorithm Correlation')
mantel(panteli,musly,permutations=10000,method="spearman")
plot(panteli,musly, xlab='Panteli', ylab='Musly', pch=19, col='#1ABCBD')
abline(lm(panteli~musly), col="red")
title(main='Inter Algorithm Correlation')
str(islands)
islands
mtcars
mpg <- mtcars$mpg
mpg
cyl <- mtcars$cyl
cor(mpg,cyl)
plot(mpg,cyl)
wt <- mtcars$wt
cor(mtcars$wt)
cor(mtcars,mwt)
cor(mtcars,wt)
cor(mtcars$disp,wt)
plot(mtcars$disp, wt)
plot(mtcars$disp, wt) + abline(lt(wt~mtcars$disp))
plot(mtcars$disp, wt) + abline(ln(wt~mtcars$disp))
plot(mtcars$disp, wt) + abline(lm(wt~mtcars$disp))
plot(mtcars$disp, wt, main='Car Displacement vs. Weight',xlab = 'Displacement (cu.in)', ylab='Weight (kgs)') + abline(lm(wt~mtcars$disp))
plot(mtcars$disp, wt,pch=15 main='Car Displacement vs. Weight',xlab = 'Displacement (cu.in)', ylab='Weight (kgs)') + abline(lm(wt~mtcars$disp))
plot(mtcars$disp, wt,pch=15,main='Car Displacement vs. Weight',xlab = 'Displacement (cu.in)', ylab='Weight (kgs)') + abline(lm(wt~mtcars$disp))
plot(mtcars$disp, wt,pch=16,main='Car Displacement vs. Weight',xlab = 'Displacement (cu.in)', ylab='Weight (kgs)') + abline(lm(wt~mtcars$disp))
plot(mtcars$disp, wt,pch=16,cex=2.5,main='Car Displacement vs. Weight',xlab = 'Displacement (cu.in)', ylab='Weight (kgs)') + abline(lm(wt~mtcars$disp))
plot(mtcars$disp, wt,col = rgb(0.1,0.4,0.5,0.3),pch=16,cex=2.5,main='Car Displacement vs. Weight',xlab = 'Displacement (cu.in)', ylab='Weight (kgs)') + abline(lm(wt~mtcars$disp))
occupationalStatus
quakes
cor(quakes$depth,quakes$mag)
plot(quakes$mag, quakes$depth, xlab="Magnitude", ylab='Depth')
hist(quakes$mag, quakes$depth, xlab="Magnitude", ylab='Depth')
hist(quakes$mag, quakes$depth)
hist(quakes)
hist(quakes$depth, quakes$mag)
hist(quakes$depth)
hist(quakes$stations)
library(rworldmap)
install.packages('rworldmap')
newmap <- getMap(resolution = "low")
install.packages('rworldmap')
library(rworldmap)
newmap <- getMap(resolution = "low")
plot(newmap, xlim = c(-20, 59), ylim = c(35, 71), asp = 1)
plot(newmap, asp = 1)
points(quakes$lon, quakes$lat, col = "red", cex = .6)
range(quakes$lon)
range(quakes$lat)
plot(newmap, xlim = range(quakes$lon), ylim = range(quakes$lat), asp = 1)
points(quakes$lon, quakes$lat, col = "red", cex = .6)
points(quakes$lon, quakes$lat, col = "red", cex = .6, pch=16)
points(quakes$lon, quakes$lat, col = rgb(.5.5.5.5.), cex = .6, pch=16)
points(quakes$lon, quakes$lat, col = rgb(.5,.5,.5,.5), cex = .6, pch=16)
plot(newmap, xlim = range(quakes$lon), ylim = range(quakes$lat), asp = 1)
points(quakes$lon, quakes$lat, col = rgb(.5,.5,.5,.5), cex = .6, pch=16)
plot(newmap, xlim = range(quakes$lon), ylim = range(quakes$lat), asp = 1)
points(quakes$lon, quakes$lat, col = rgb(.8,.5,.5,.5), cex = .6, pch=16)
library(ggmap)
install.packages('ggmap')
map <- get_map(location = 'Australia', zoom = 4)
map <- get_map(location = 'Oceania', zoom = 4)
map <- get_map(location = 'Asia', zoom = 4)
install.packages('ggmap')
library(ggmap)
map <- get_map(location = 'Australia', zoom = 4)
library("rjson")
data = rjson::fromJSON(file="https://music.keio.moe/api/experiments/world_music_workshop_rank/export")
data
length(data)
data[0]
data[0][matrix]
data[0]$matrix
data[33]$matrix
data = rjson::fromJSON(file="https://music.keio.moe/api/experiments/world_music_workshop_rank/export")
mtcars.pca <- prcomp(mtcars[,c(1:7,10,11)], center = TRUE,scale. = TRUE)
summary(mtcars.pca)
summary(mtcars.pca)
library(devtools)
install_github("vqv/ggbiplot")
library(ggbiplot)\
library(ggbiplot)
ggbiplot(mtcars.pca)
ggbiplot(mtcars.pca, labels=rownames(mtcars))
mtcars.country <- c(rep("Japan", 3), rep("US",4), rep("Europe", 7),rep("US",3), "Europe", rep("Japan", 3), rep("US",4), rep("Europe", 3), "US", rep("Europe", 3))
ggbiplot(mtcars.pca,ellipse=TRUE,  labels=rownames(mtcars), groups=mtcars.country)
setwd('Documents/Comp Music/Cantometrics/ISMIR 2020/full-distances/')
cantometrics_no_na <- read.csv('cantometrics_no_na_dist.csv', header=FALSE)
cantometrics_no_na
cantometrics_no_na <- dist(cantometrics_no_na)
cantometrics_no_na.dist <- as.dist(cantometrics_no_na)
mds <- cmdscale(cantometrics_no_na.dist, eig=TRUE, k=2)
x <- mds$points[,1]
y <- mds$points[,2]
plot(x, y, xlab="Component 1", ylab="Component 2", main="Cantometrics Without N/A", pch=19)
text(x,y, label=labels, pos=3)
labels
labels <- c("1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","10","21","22","23","24","25","26","27","28","29","30",)
labels <- c("1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","10","21","22","23","24","25","26","27","28","29","30")
text(x,y, label=labels, pos=3)
labels <- c("1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30")
plot(x, y, xlab="Component 1", ylab="Component 2", main="Cantometrics Without N/A", pch=19)
text(x,y, label=labels, pos=3)
setwd("../without-track-20/")
cantometrics <- read.csv("./cantometrics.csv",header=FALSE)
cantometrics_no_na <- dist(read.csv("cantometrics_no_na_dist.csv",header=FALSE))
cantometrics <- read.csv("./cantometrics.csv",header=FALSE)
cantometrics_no_na <- dist(read.csv("cantometrics_no_na_dist.csv",header=FALSE))
musly <- read.csv("musly.csv", header=FALSE)
metric_learn <- read.csv("metric_learn.csv", header=FALSE)
panteli <- read.csv("panteli.csv", header=FALSE)
cantometrics.dist <- as.dist(cantometrics)
cantometrics_no_na.dist <- as.dist(cantometrics_no_na)
musly.dist <- as.dist(musly)
panteli.dist <- as.dist(panteli)
metric_learn.dist <- as.dist(metric_learn)
mds<- cmdscale(panteli.dist, eig=TRUE, k=2)
x<-mds$points[,1]
y<-mds$points[,2]
plot(x,y,xlab="Compoenent 1", ylab="Compontent 2", main="Panteli", pch=19)
label_2<- c("1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30")
text(x,y,label=label_2,pos=2)
label_2<- c("1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","21","22","23","24","25","26","27","28","29","30")
plot(x,y,xlab="Compoenent 1", ylab="Compontent 2", main="Panteli", pch=19)
text(x,y,label=label_2,pos=2)
mds<- cmdscale(cantometrics.dist, eig=TRUE, k=2)
x<-mds$points[,1]
y<-mds$points[,2]
plot(x,y,xlab="Compoenent 1", ylab="Compontent 2", main="Cantometrics", pch=19)
text(x,y,label=label_2,pos=2)
mds<- cmdscale(cantometrics_no_na.dist, eig=TRUE, k=2)
x<-mds$points[,1]
y<-mds$points[,2]
plot(x,y,xlab="Compoenent 1", ylab="Compontent 2", main="Cantometrics W/O N/A", pch=19)
text(x,y,label=label_2,pos=2)
mds<- cmdscale(metric_learn.dist, eig=TRUE, k=2)
x<-mds$points[,1]
y<-mds$points[,2]
plot(x,y,xlab="Compoenent 1", ylab="Compontent 2", main="Metric Learning", pch=19)
text(x,y,label=label_2,pos=2)
mds<- cmdscale(musly.dist, eig=TRUE, k=2)
x<-mds$points[,1]
y<-mds$points[,2]
plot(x,y,xlab="Compoenent 1", ylab="Compontent 2", main="Metric Learning", pch=19)
plot(x,y,xlab="Compoenent 1", ylab="Compontent 2", main="Musly", pch=19)
text(x,y,label=label_2,pos=2)
